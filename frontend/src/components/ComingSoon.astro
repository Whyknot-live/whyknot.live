---
// ComingSoon component - Full height section for December launch
const launchDate = new Date('2025-12-19');
const currentDate = new Date();
const timeDiff = launchDate.getTime() - currentDate.getTime();
const daysUntilLaunch = Math.max(0, Math.ceil(timeDiff / (1000 * 3600 * 24)));
---

<section class="coming-soon-section" id="coming-soon">
  <div class="floating-orbs" aria-hidden="true">
    <div class="orb orb-1"></div>
    <div class="orb orb-2"></div>
    <div class="orb orb-3"></div>
  </div>
  
  <div class="coming-soon-container">
    <div class="coming-soon-content">
      <!-- Launch Badge -->
      <div class="launch-badge">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" aria-hidden="true">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" 
                fill="currentColor"/>
        </svg>
        <span>Launching December 19, 2025</span>
      </div>
      
      <!-- Main Title -->
      <h1 class="coming-soon-title">
        Something Amazing
        <span class="gradient-text">Is Coming</span>
      </h1>
      
      <!-- Description -->
      <p class="coming-soon-description">
        We're putting the finishing touches on your gateway to discovering 
        the web's most innovative websites and tools. Get ready for an amazing experience 
        like no other.
      </p>
      
      <!-- Launch Countdown -->
      <div class="countdown-wrapper">
        <div class="countdown-timer">
          <div class="timer-unit">
            <div class="timer-number" id="days">{daysUntilLaunch}</div>
            <div class="timer-label">Days</div>
          </div>
          <div class="timer-separator">:</div>
          <div class="timer-unit">
            <div class="timer-number" id="hours">00</div>
            <div class="timer-label">Hours</div>
          </div>
          <div class="timer-separator">:</div>
          <div class="timer-unit">
            <div class="timer-number" id="minutes">00</div>
            <div class="timer-label">Minutes</div>
          </div>
        </div>
      </div>
      
    
    </div>
  </div>
  
  <!-- Glowing divider between Coming Soon and following sections -->
  <div class="glow-divider" aria-hidden="true">
    <span class="glow-line"></span>
  </div>
</section>

<style>
  .coming-soon-section {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    background: var(--color-bg);
    background-image: 
      var(--gradient-radial-hero), 
      var(--gradient-accent-glow),
      linear-gradient(
        45deg,
        rgba(32, 197, 181, 0.02) 0%,
        rgba(47, 221, 204, 0.04) 25%,
        rgba(56, 228, 213, 0.02) 50%,
        rgba(169, 240, 233, 0.03) 75%,
        rgba(32, 197, 181, 0.02) 100%
      );
    background-size: 100% 100%, 100% 100%, 400% 400%;
    animation: backgroundFlow 12s ease-in-out infinite;
    overflow: hidden;
    scroll-snap-align: start;
    transition: background-color var(--transition-base);
  }

  @keyframes backgroundFlow {
    0%, 100% {
      background-position: 0% 50%, 0% 50%, 0% 50%;
    }
    33% {
      background-position: 0% 50%, 0% 50%, 100% 50%;
    }
    66% {
      background-position: 0% 50%, 0% 50%, 100% 100%;
    }
  }

  .floating-orbs {
    position: absolute;
    inset: 0;
    pointer-events: none;
    z-index: 0;
  }

  .orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(60px);
    opacity: 0.4;
    animation: orbFloat 20s ease-in-out infinite;
  }

  .orb-1 {
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, rgba(32, 197, 181, 0.4), rgba(47, 221, 204, 0.2));
    top: 10%;
    left: 15%;
    animation-delay: 0s;
  }

  .orb-2 {
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, rgba(56, 228, 213, 0.3), rgba(169, 240, 233, 0.1));
    top: 60%;
    right: 20%;
    animation-delay: -8s;
  }

  .orb-3 {
    width: 250px;
    height: 250px;
    background: radial-gradient(circle, rgba(47, 221, 204, 0.5), rgba(32, 197, 181, 0.2));
    bottom: 15%;
    left: 60%;
    animation-delay: -15s;
  }

  @keyframes orbFloat {
    0%, 100% {
      transform: translateY(0px) translateX(0px) scale(1);
    }
    33% {
      transform: translateY(-40px) translateX(30px) scale(1.1);
    }
    66% {
      transform: translateY(40px) translateX(-30px) scale(0.9);
    }
  }

  .coming-soon-container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 2rem;
    text-align: center;
    position: relative;
    z-index: 1;
  }

  .coming-soon-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    animation: fadeInUp 1s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .launch-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: var(--color-primary-container);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid var(--color-outline-variant);
    border-radius: 2rem;
    padding: 0.75rem 1.25rem;
    font-size: 0.95rem;
    font-weight: 600;
    color: var(--color-on-primary-container);
    animation: badgePulse 3s ease-in-out infinite;
    transition: all var(--transition-base);
  }

  @keyframes badgePulse {
    0%, 100% {
      box-shadow: 0 0 0 0 color-mix(in srgb, var(--color-primary) 40%, transparent);
    }
    50% {
      box-shadow: 0 0 0 12px color-mix(in srgb, var(--color-primary) 0%, transparent);
    }
  }

  .coming-soon-title {
    font-size: clamp(2.8rem, 7vw, 5rem);
    font-weight: 700;
    line-height: 1.1;
    margin: 0;
    color: var(--color-text);
    text-align: center;
  }

  .gradient-text {
    background: linear-gradient(
      135deg,
      var(--color-accent-200) 0%,
      var(--color-accent-300) 15%,
      var(--color-blue-300) 30%,
      var(--color-accent-100) 45%,
      var(--color-accent-300) 60%,
      var(--color-blue-300) 75%,
      var(--color-accent-200) 90%,
      var(--color-accent-100) 100%
    );
    background-size: 400% 400%;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: gradientFlow 6s ease-in-out infinite;
  }

  @keyframes gradientFlow {
    0% {
      background-position: 0% 50%;
    }
    25% {
      background-position: 100% 50%;
    }
    50% {
      background-position: 100% 100%;
    }
    75% {
      background-position: 0% 100%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .coming-soon-description {
    font-size: clamp(1.1rem, 2.5vw, 1.4rem);
    line-height: 1.6;
    color: var(--color-text-muted);
    max-width: 600px;
    margin: 0;
  }

  .countdown-wrapper {
    margin: 1rem 0;
  }

  .countdown-timer {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin: 2rem 0;
  }

  .timer-unit {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    background: var(--color-surface-container);
    backdrop-filter: blur(16px) saturate(180%);
    -webkit-backdrop-filter: blur(16px) saturate(180%);
    border: 1px solid var(--color-outline-variant);
    border-radius: 1rem;
    padding: 1.5rem 1rem;
    min-width: 80px;
  }

  .timer-number {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    background: linear-gradient(
      90deg,
      var(--color-accent-200) 0%,
      var(--color-accent-300) 50%,
      var(--color-blue-300) 100%
    );
    background-size: 200% 100%;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    line-height: 1;
    animation: numberGradient 3s ease-in-out infinite;
  }

  @keyframes numberGradient {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  .timer-label {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .timer-separator {
    font-size: 2rem;
    font-weight: 300;
    color: var(--color-accent-300);
    opacity: 0.6;
  }

  .features-preview {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    flex-wrap: wrap;
    margin: 1rem 0 2rem;
  }

  /* Glowing divider styles */
  .glow-divider {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0; /* flush to the bottom edge of the section */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2; /* ensure it's above background but below interactive content */
    pointer-events: none;
    padding: 0;
  }

  .glow-line {
    display: block;
    width: 100%;
    height: 2px;
    border-radius: 999px;
    background: linear-gradient(
      90deg, 
      rgba(32,197,181,0) 0%, 
      rgba(32,197,181,0.12) 8%, 
      rgba(47,221,204,0.7) 25%,
      rgba(56,228,213,0.8) 50%,
      rgba(47,221,204,0.7) 75%, 
      rgba(32,197,181,0.12) 92%, 
      rgba(32,197,181,0) 100%
    );
    background-size: 200% 100%;
    box-shadow: 
      0 -6px 18px -6px rgba(47,221,204,0.14), 
      0 -10px 30px -16px rgba(32,197,181,0.06),
      0 0 40px rgba(47,221,204,0.1);
    position: relative;
    filter: blur(0.8px);
    transform-origin: center;
    animation: glowFlow 4s ease-in-out infinite;
  }

  @keyframes glowFlow {
    0% {
      transform: scaleX(0.995) translateY(0);
      opacity: 0.9;
      background-position: 0% 50%;
    }
    50% {
      transform: scaleX(1.005) translateY(-1px);
      opacity: 1;
      background-position: 100% 50%;
    }
    100% {
      transform: scaleX(0.995) translateY(0);
      opacity: 0.9;
      background-position: 200% 50%;
    }
  }



  .feature-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--color-text-muted);
    font-size: 0.95rem;
    font-weight: 500;
  }

  .feature-icon {
    background: rgba(32, 197, 181, 0.1);
    border: 1px solid rgba(32, 197, 181, 0.2);
    border-radius: 0.5rem;
    padding: 0.5rem;
    color: var(--color-accent-300);
  }

  .scroll-indicator {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-text-muted);
    font-size: 0.875rem;
    font-weight: 500;
    animation: bounce 2s infinite;
    cursor: pointer;
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .scroll-indicator svg {
    transform: rotate(90deg);
    opacity: 0.7;
  }

  @media (max-width: 768px) {
    .coming-soon-container {
      padding: 0 1rem;
    }

    .countdown-timer {
      gap: 0.5rem;
    }

    .timer-unit {
      padding: 1rem 0.75rem;
      min-width: 70px;
    }

    .features-preview {
      gap: 1rem;
    }

    .feature-item {
      font-size: 0.875rem;
    }
  }
</style>

<script>
  // Countdown Timer
  function updateCountdown() {
    const launchDate = new Date('2025-12-19T00:00:00Z');
    const now = new Date();
    const diff = launchDate.getTime() - now.getTime();    if (diff > 0) {
      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));

      const daysEl = document.getElementById('days');
      const hoursEl = document.getElementById('hours');
      const minutesEl = document.getElementById('minutes');

      if (daysEl) daysEl.textContent = days.toString().padStart(2, '0');
      if (hoursEl) hoursEl.textContent = hours.toString().padStart(2, '0');
      if (minutesEl) minutesEl.textContent = minutes.toString().padStart(2, '0');
    }
  }

  // Update countdown every minute
  updateCountdown();
  setInterval(updateCountdown, 60000);

  // Scroll indicator click handler
  const scrollIndicator = document.querySelector('.scroll-indicator');
  if (scrollIndicator) {
    scrollIndicator.addEventListener('click', () => {
      const waitlistSection = document.getElementById('waitlist');
      if (waitlistSection) {
        waitlistSection.scrollIntoView({ behavior: 'smooth' });
      }
    });
  }
</script>
