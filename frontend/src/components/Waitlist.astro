---
// Waitlist component - Full height section for alpha user signups
---

<section class="waitlist-section" id="waitlist">
 <div class="floating-particles" aria-hidden="true">
 <div class="particle particle-1"></div>
 <div class="particle particle-2"></div>
 <div class="particle particle-3"></div>
 <div class="particle particle-4"></div>
 <div class="particle particle-5"></div>
 <div class="particle particle-6"></div>
 </div>

 <div class="waitlist-container">
 <div class="waitlist-content">
 <!-- Alpha Badge -->
 <div class="alpha-badge">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none" aria-hidden="true">
 <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" 
 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 <span>Alpha Access â€¢ Now Live</span>
 </div>

 <!-- Main Title -->
 <h2 class="waitlist-title">
 Join the
 <span class="gradient-text">Alpha Community</span>
 </h2>

 <!-- Description -->
 <p class="waitlist-description">
 Be among the first to experience & connect with fellow innovators 
 discovering the future of web discovery.
 </p>

 <!-- Waitlist Form -->
 <form class="waitlist-form" id="waitlist-form" role="form" aria-labelledby="waitlist-title">
 <div class="form-main">
 <div class="form-group">
 <label for="email-input" class="sr-only">Email address</label>
 <input 
 type="email" 
 placeholder="Enter your email address" 
 class="form-input"
 id="email-input"
 name="email"
 required
 autocomplete="email"
 aria-describedby="email-help"
 />
 <button type="submit" class="btn btn-primary btn-lg" id="submit-btn">
 <span class="btn-content">
 <span class="btn-text">Join Alpha Waitlist</span>
 <span class="btn-loader is-hidden" aria-hidden="true">
 <svg class="spinner" width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
 <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="3" opacity="0.25"/>
 <path d="M12 2a10 10 0 0 1 10 10" stroke="currentColor" stroke-width="3" stroke-linecap="round"/>
 </svg>
 </span>
 </span>
 </button>
 </div>

 <p class="form-note" id="email-help">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="icon-inline" aria-hidden="true">
 <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
 </svg>
 No spam, ever. Early access guaranteed.
 </p>
 </div>

 <!-- Interest Categories -->
 <div class="form-interests" role="group" aria-labelledby="interests-label">
 <h3 id="interests-label" class="interests-title">What interests you most?</h3>
 <div class="interests-grid">
 <button type="button" class="interest-chip" data-interest="design" aria-pressed="false">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
 <path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z" 
 stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 <path d="M16 8L2 22M17.5 15H9" 
 stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 Design Tools
 </button>
 
 <button type="button" class="interest-chip" data-interest="development" aria-pressed="false">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
 <polyline points="16,18 22,12 16,6" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 <polyline points="8,6 2,12 8,18" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 Development
 </button>
 
 <button type="button" class="interest-chip" data-interest="productivity" aria-pressed="false">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
 <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" 
 stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 Productivity
 </button>
 
 <button type="button" class="interest-chip" data-interest="ai" aria-pressed="false">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
 <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" 
 stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 AI Tools
 </button>
 
 <button type="button" class="interest-chip" data-interest="marketing" aria-pressed="false">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
 <path d="M3 3v18h18" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 <path d="m19 9-5 5-4-4-3 3" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 Marketing
 </button>
 
 <button type="button" class="interest-chip" data-interest="inspiration" aria-pressed="false">
 <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
 <path d="m9 9 3-3 3 3m-6 6 3 3 3-3" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 <path d="M21 12h-8m4-4v8" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
 </svg>
 Inspiration
 </button>
 </div>
 </div>

 <!-- Success/Error Messages -->
 <div class="form-success" id="form-success">
 <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="icon-inline">
 <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
 </svg>
 <span>Welcome to the alpha! You'll hear from us soon.</span>
 </div>
 
 <div class="form-error" id="form-error">
 <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="icon-inline">
 <path d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
 </svg>
 <span id="error-text">Something went wrong. Please try again.</span>
 </div>
 </form>

 </div>
 </div>
 </div>
 </div>
</section>

<style>
.waitlist-section {
 height: 100vh;
 display: flex;
 align-items: center;
 justify-content: center;
 position: relative;
 background: var(--color-bg-alt);
 background-image: 
 var(--gradient-radial-hero), 
 var(--gradient-accent-glow),
 linear-gradient(
 45deg,
 rgba(32, 197, 181, 0.03) 0%,
 rgba(47, 221, 204, 0.05) 25%,
 rgba(56, 228, 213, 0.03) 50%,
 rgba(169, 240, 233, 0.04) 75%,
 rgba(32, 197, 181, 0.03) 100%
 );
 background-size: 100% 100%, 100% 100%, 400% 400%;
 animation: waitlistBackgroundFlow 15s ease-in-out infinite;
 overflow: hidden;
 scroll-snap-align: start;
 transition: background-color var(--transition-base);
 }

 @keyframes waitlistBackgroundFlow {
 0%, 100% {
 background-position: 0% 50%, 0% 50%, 0% 50%;
 }
 33% {
 background-position: 0% 50%, 0% 50%, 100% 50%;
 }
 66% {
 background-position: 0% 50%, 0% 50%, 100% 100%;
 }
 }

.floating-particles {
 position: absolute;
 inset: 0;
 pointer-events: none;
 z-index: 0;
 }

.particle {
 position: absolute;
 width: 4px;
 height: 4px;
 background: linear-gradient(45deg, rgba(32, 197, 181, 0.6), rgba(47, 221, 204, 0.8));
 border-radius: 50%;
 animation: particleFloat 15s ease-in-out infinite;
 box-shadow: 0 0 8px rgba(32, 197, 181, 0.4);
 }

.particle-1 { top: 20%; left: 10%; animation-delay: 0s; }
.particle-2 { top: 60%; left: 85%; animation-delay: -5s; }
.particle-3 { top: 80%; left: 20%; animation-delay: -10s; }
.particle-4 { top: 40%; left: 70%; animation-delay: -2s; }
.particle-5 { top: 15%; left: 60%; animation-delay: -7s; }
.particle-6 { top: 75%; left: 40%; animation-delay: -12s; }

 @keyframes particleFloat {
 0%, 100% { 
 transform: translateY(0px) translateX(0px) scale(1);
 opacity: 0.6;
 }
 25% { 
 transform: translateY(-20px) translateX(10px) scale(1.2);
 opacity: 1;
 }
 50% { 
 transform: translateY(0px) translateX(-15px) scale(0.8);
 opacity: 0.4;
 }
 75% { 
 transform: translateY(15px) translateX(5px) scale(1.1);
 opacity: 0.8;
 }
 }

.waitlist-container {
 max-width: 800px;
 margin: 0 auto;
 padding: 0 2rem;
 position: relative;
 z-index: 1;
 }

.waitlist-content {
 display: flex;
 flex-direction: column;
 align-items: center;
 text-align: center;
 animation: fadeInUp 1s ease-out 0.3s both;
 }

 @keyframes fadeInUp {
 from {
 opacity: 0;
 transform: translateY(40px);
 }
 to {
 opacity: 1;
 transform: translateY(0);
 }
 }

.alpha-badge {
 display: inline-flex;
 align-items: center;
 gap: 0.5rem;
 background: var(--color-primary-container);
 backdrop-filter: blur(12px);
 -webkit-backdrop-filter: blur(12px);
 border: 1px solid var(--color-outline-variant);
 border-radius: 2rem;
 padding: 0.75rem 1.25rem;
 font-size: 0.95rem;
 font-weight: 600;
 color: var(--color-on-primary-container);
 margin-bottom: 2rem;
 transition: all var(--transition-base);
 }

.waitlist-title {
 font-size: clamp(2.5rem, 6vw, 4rem);
 font-weight: 700;
 line-height: 1.1;
 margin: 0 0 1.5rem;
 color: var(--color-text);
 }

.gradient-text {
 background: linear-gradient(
 135deg,
 var(--color-accent-200) 0%,
 var(--color-accent-300) 15%,
 var(--color-blue-300) 30%,
 var(--color-accent-100) 45%,
 var(--color-accent-300) 60%,
 var(--color-blue-300) 75%,
 var(--color-accent-200) 90%,
 var(--color-accent-100) 100%
 );
 background-size: 400% 400%;
 background-clip: text;
 -webkit-background-clip: text;
 color: transparent;
 animation: alphaGradientFlow 7s ease-in-out infinite;
 }

 @keyframes alphaGradientFlow {
 0% {
 background-position: 0% 50%;
 }
 25% {
 background-position: 100% 50%;
 }
 50% {
 background-position: 100% 100%;
 }
 75% {
 background-position: 0% 100%;
 }
 100% {
 background-position: 0% 50%;
 }
 }

.waitlist-description {
 font-size: clamp(1.1rem, 2.2vw, 1.3rem);
 line-height: 1.6;
 color: var(--color-text-muted);
 max-width: 550px;
 margin: 0 0 2.5rem;
 }

.waitlist-form {
 width: 100%;
 max-width: 600px;
 }

.form-main {
 margin-bottom: 2rem;
 }

.form-group {
 display: flex;
 gap: 1rem;
 margin-bottom: 1rem;
 }

.form-input {
 flex: 1;
 background: var(--color-surface-container);
 backdrop-filter: blur(16px) saturate(180%);
 -webkit-backdrop-filter: blur(16px) saturate(180%);
 border: 1px solid var(--color-outline-variant);
 border-radius: 1rem;
 padding: 1rem 1.25rem;
 color: var(--color-text);
 font-size: 1rem;
 font-family: inherit;
 transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
 outline: none;
 box-shadow: 0 4px 16px -4px rgba(49, 67, 72, 0.1);
 }

.form-input:focus {
 border-color: rgba(32, 197, 181, 0.4);
 box-shadow: 
 0 8px 32px -8px rgba(32, 197, 181, 0.2),
 0 0 0 1px rgba(32, 197, 181, 0.2) inset,
 0 0 20px rgba(47, 221, 204, 0.1);
 background: var(--color-surface-container-high);
 }

.form-input::placeholder {
 color: var(--color-text-muted);
 opacity: 0.8;
 }

.btn {
 background: linear-gradient(
 135deg, 
 var(--color-accent-400) 0%, 
 var(--color-accent-300) 25%,
 var(--color-accent-200) 50%,
 var(--color-accent-300) 75%,
 var(--color-accent-400) 100%
 );
 background-size: 300% 300%;
 color: #ffffff;
 border: none;
 border-radius: 1rem;
 padding: 1rem 2rem;
 font-size: 1rem;
 font-weight: 600;
 cursor: pointer;
 transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
 position: relative;
 overflow: hidden;
 white-space: nowrap;
 box-shadow: 0 4px 16px -4px rgba(32, 197, 181, 0.3);
 animation: buttonGradientShift 8s ease-in-out infinite;
 }

 @keyframes buttonGradientShift {
 0%, 100% {
 background-position: 0% 50%;
 }
 50% {
 background-position: 100% 50%;
 }
 }

.btn:hover {
 background: linear-gradient(
 135deg, 
 var(--color-accent-300) 0%, 
 var(--color-accent-200) 25%,
 var(--color-accent-100) 50%,
 var(--color-accent-200) 75%,
 var(--color-accent-300) 100%
 );
 background-size: 300% 300%;
 transform: translateY(-2px) scale(1.02);
 box-shadow: 0 8px 32px -8px rgba(32, 197, 181, 0.4);
 animation: buttonGradientShift 6s ease-in-out infinite;
 }

.btn:active {
 transform: translateY(0) scale(0.98);
 }

.btn:disabled {
 opacity: 0.7;
 cursor: not-allowed;
 transform: none !important;
 }

.btn-content {
 display: flex;
 align-items: center;
 justify-content: center;
 gap: 0.5rem;
 }

.btn-loader {
 display: flex;
 align-items: center;
 justify-content: center;
 }

.spinner {
 animation: spin 0.8s linear infinite;
 }

 @keyframes spin {
 from {
 transform: rotate(0deg);
 }
 to {
 transform: rotate(360deg);
 }
 }

.is-hidden {
 display: none !important;
 }

.form-note {
 display: flex;
 align-items: center;
 gap: 0.5rem;
 font-size: 0.875rem;
 color: var(--color-text-muted);
 opacity: 0.8;
 justify-content: center;
 }

.icon-inline {
 flex-shrink: 0;
 width: 16px;
 height: 16px;
 }

.form-interests {
 margin-bottom: 2rem;
 }

.interests-title {
 font-size: 1.1rem;
 font-weight: 600;
 color: var(--color-text);
 margin: 0 0 1rem;
 }

.interests-grid {
 display: grid;
 grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
 gap: 0.75rem;
 max-width: 500px;
 margin: 0 auto;
 }

.interest-chip {
 display: flex;
 align-items: center;
 gap: 0.5rem;
 background: var(--color-surface-container-low);
 backdrop-filter: blur(12px) saturate(150%);
 -webkit-backdrop-filter: blur(12px) saturate(150%);
 border: 1px solid var(--color-outline-variant);
 border-radius: 0.75rem;
 padding: 0.75rem 1rem;
 font-family: var(--font-sans);
 font-size: 0.875rem;
 font-weight: 500;
 color: var(--color-text-muted);
 cursor: pointer;
 transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
 position: relative;
 overflow: hidden;
 }

.interest-chip:hover {
 background: var(--color-surface-container);
 border-color: rgba(32, 197, 181, 0.3);
 transform: translateY(-2px);
 }

.interest-chip[aria-pressed="true"] {
 background: linear-gradient(
 135deg, 
 rgba(32, 197, 181, 0.15) 0%, 
 rgba(47, 221, 204, 0.12) 50%,
 rgba(56, 228, 213, 0.15) 100%
 );
 background-size: 200% 200%;
 border-color: rgba(32, 197, 181, 0.5);
 color: var(--color-accent-200);
 transform: translateY(-3px);
 box-shadow: 
 0 12px 32px -12px rgba(32, 197, 181, 0.3),
 0 0 0 1px rgba(47, 221, 204, 0.2) inset;
 animation: chipGradientPulse 4s ease-in-out infinite;
 }

 @keyframes chipGradientPulse {
 0%, 100% {
 background-position: 0% 50%;
 box-shadow: 
 0 12px 32px -12px rgba(32, 197, 181, 0.3),
 0 0 0 1px rgba(47, 221, 204, 0.2) inset;
 }
 50% {
 background-position: 100% 50%;
 box-shadow: 
 0 16px 40px -16px rgba(47, 221, 204, 0.4),
 0 0 0 1px rgba(56, 228, 213, 0.3) inset;
 }
 }

.form-success,
.form-error {
 display: none;
 align-items: center;
 gap: 0.75rem;
 padding: 1rem 1.25rem;
 border-radius: 0.75rem;
 font-size: 0.95rem;
 font-weight: 500;
 margin-top: 1rem;
 backdrop-filter: blur(12px);
 -webkit-backdrop-filter: blur(12px);
 }

.form-success {
 background: rgba(34, 197, 94, 0.15);
 border: 1px solid rgba(34, 197, 94, 0.3);
 color: rgba(34, 197, 94, 0.9);
 }

.form-success.show {
 display: flex;
 animation: slideInUp 0.4s ease-out;
 }

.form-error {
 background: rgba(239, 68, 68, 0.15);
 border: 1px solid rgba(239, 68, 68, 0.3);
 color: rgba(239, 68, 68, 0.9);
 }

.form-error.show {
 display: flex;
 animation: slideInUp 0.4s ease-out;
 }

 @keyframes slideInUp {
 from {
 opacity: 0;
 transform: translateY(10px);
 }
 to {
 opacity: 1;
 transform: translateY(0);
 }
 }

.alpha-perks {
 display: flex;
 align-items: center;
 justify-content: center;
 gap: 2rem;
 margin-top: 3rem;
 flex-wrap: wrap;
 }

.perk-item {
 display: flex;
 align-items: center;
 gap: 0.5rem;
 color: var(--color-text-muted);
 font-size: 0.9rem;
 font-weight: 500;
 }

.perk-icon {
 background: rgba(32, 197, 181, 0.15);
 border: 1px solid rgba(32, 197, 181, 0.3);
 border-radius: 0.5rem;
 padding: 0.5rem;
 color: var(--color-accent-300);
 }

 @media (max-width: 768px) {
.waitlist-container {
 padding: 0 1rem;
 }

.form-group {
 flex-direction: column;
 gap: 0.75rem;
 }

.interests-grid {
 grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
 gap: 0.5rem;
 }

.interest-chip {
 padding: 0.6rem 0.8rem;
 font-size: 0.8rem;
 }

.alpha-perks {
 gap: 1rem;
 }

.perk-item {
 font-size: 0.85rem;
 }
 }

 @media (max-width: 480px) {
.interests-grid {
 grid-template-columns: 1fr 1fr;
 }
 }
</style>

<script>
 // Form submission handler
 const waitlistForm = document.getElementById('waitlist-form');
 const emailInput = document.getElementById('email-input') as HTMLInputElement;
 const submitBtn = document.getElementById('submit-btn');
 const btnText = submitBtn?.querySelector('.btn-text');
 const btnLoader = submitBtn?.querySelector('.btn-loader');
 const formSuccess = document.getElementById('form-success');
 const formError = document.getElementById('form-error');
 const errorText = document.getElementById('error-text');

 // Interest chips handling
 const interestChips = document.querySelectorAll('.interest-chip');
 const selectedInterests = new Set();

 interestChips.forEach(chip => {
 chip.addEventListener('click', () => {
 const interest = chip.getAttribute('data-interest');
 const isPressed = chip.getAttribute('aria-pressed') === 'true';
 
 if (isPressed) {
 chip.setAttribute('aria-pressed', 'false');
 selectedInterests.delete(interest);
 } else {
 chip.setAttribute('aria-pressed', 'true');
 selectedInterests.add(interest);
 }
 });
 });

 // Form submission
 if (waitlistForm) {
 waitlistForm.addEventListener('submit', async function(e) {
 e.preventDefault();
 
 const email = emailInput?.value.trim();
 if (!email || !isValidEmail(email)) {
 showError('Please enter a valid email address.');
 return;
 }

 // Show loading state
 setLoading(true);
 hideMessages();

 try {
 // Prepare form data with interests
 const formData = {
 email: email,
 interests: Array.from(selectedInterests),
 timestamp: new Date().toISOString(),
 type: 'alpha-waitlist'
 };
 
 // Determine API URL based on environment
 const apiBaseUrl = import.meta.env.PUBLIC_API_BASE_URL || 'http://localhost:10000';
 const apiUrl = `${apiBaseUrl}/api/waitlist`;
 
 // Submit to backend API
 const response = await fetch(apiUrl, {
 method: 'POST',
 headers: {
 'Content-Type': 'application/json',
 },
 body: JSON.stringify(formData)
 });

 const data = await response.json();
 
 if (!response.ok) {
 // Handle specific error cases
 if (response.status === 409) {
 showError('This email is already on our waitlist.');
 } else if (response.status === 429) {
 showError('Too many requests. Please try again later.');
 } else if (response.status === 400) {
 showError('Please enter a valid email address.');
 } else {
 showError('Failed to join waitlist. Please try again.');
 }
 return;
 }
 
 // Show success with position if available
 showSuccess();
 emailInput.value = '';
 
 // Reset interest selection
 interestChips.forEach(chip => chip.setAttribute('aria-pressed', 'false'));
 selectedInterests.clear();
 
 } catch (error) {
 console.error('Waitlist submission error:', error);
 showError('Network error. Please check your connection and try again.');
 } finally {
 setLoading(false);
 }
 });
 }

 function isValidEmail(email: string): boolean {
 const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
 return emailRegex.test(email);
 }

 function setLoading(isLoading: boolean) {
 if (!submitBtn || !btnText || !btnLoader) return;
 
 (submitBtn as HTMLButtonElement).disabled = isLoading;
 if (isLoading) {
 btnText.classList.add('is-hidden');
 btnLoader.classList.remove('is-hidden');
 } else {
 btnText.classList.remove('is-hidden');
 btnLoader.classList.add('is-hidden');
 }
 }

 function showSuccess() {
 hideMessages();
 if (formSuccess) {
 formSuccess.classList.add('show');
 setTimeout(() => formSuccess.classList.remove('show'), 6000);
 }
 }

 function showError(message: string) {
 hideMessages();
 if (errorText) {
 errorText.textContent = message;
 }
 if (formError) {
 formError.classList.add('show');
 setTimeout(() => formError.classList.remove('show'), 5000);
 }
 }

 function hideMessages() {
 if (formSuccess) formSuccess.classList.remove('show');
 if (formError) formError.classList.remove('show');
 }
</script>
