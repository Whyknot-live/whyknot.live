---
// Redirect to main coming soon page during launch phase
return Astro.redirect('/', 302);
---
  <main class="page-main">
    <!-- Hero Section -->
    <section class="hero-section">
      <div class="section-container">
        <div class="hero-content text-center">
          <div class="hero-badge">
            <span>Get in Touch</span>
          </div>
          
          <h1 class="hero-title">
            Let's Start a 
            <span class="gradient-text">Conversation</span>
          </h1>
          
          <p class="hero-description">
            Have a question, suggestion, or want to collaborate? 
            We'd love to hear from you. Drop us a line and we'll get back to you soon.
          </p>
        </div>
      </div>
    </section>

    <!-- Quick Links / Contact Options -->
    <section class="section contact-quick-links">
      <div class="section-container">
        <div class="grid cols-3">
          <a class="card contact-card reveal" href="mailto:hello@whyknot.live">
            <div class="icon-circle" aria-hidden="true">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" role="img">
                <path d="M4 6h16a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2z" stroke="currentColor" stroke-width="1.5"/>
                <path d="M22 8l-10 6L2 8" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
              </svg>
            </div>
            <div>
              <h3>General & Collaboration</h3>
              <p class="text-muted">Ideas, partnerships, or just say hi â€” we usually reply within 24 hours.</p>
            </div>
          </a>
          <a class="card contact-card reveal" href="#contact-form">
            <div class="icon-circle" aria-hidden="true">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" role="img">
                <path d="M12 20l-3-3H6a4 4 0 01-4-4V7a4 4 0 014-4h12a4 4 0 014 4v6a4 4 0 01-4 4h-3l-3 3z" stroke="currentColor" stroke-width="1.5"/>
              </svg>
            </div>
            <div>
              <h3>Product Support</h3>
              <p class="text-muted">Report an issue or ask a question â€” include as much detail as possible.</p>
            </div>
          </a>
          <a class="card contact-card reveal" href="mailto:press@whyknot.live">
            <div class="icon-circle" aria-hidden="true">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" role="img">
                <path d="M4 4h10l6 6v10a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2z" stroke="currentColor" stroke-width="1.5"/>
                <path d="M14 4v6h6" stroke="currentColor" stroke-width="1.5"/>
              </svg>
            </div>
            <div>
              <h3>Media & Press</h3>
              <p class="text-muted">Need assets or a quote? Reach out and weâ€™ll coordinate quickly.</p>
            </div>
          </a>
        </div>

        <hr class="separator" />

        <!-- Response metrics -->
        <div class="metrics-grid reveal">
          <div class="stat-card">
            <div class="stat-value" data-counter target-value="24">0</div>
            <div class="stat-label">hours typical response</div>
          </div>
          <div class="stat-card">
            <div class="stat-value" data-counter target-value="8">0</div>
            <div class="stat-label">hours first reply avg</div>
          </div>
          <div class="stat-card">
            <div class="stat-value">Monâ€“Fri</div>
            <div class="stat-label">9:00â€“18:00 IST</div>
          </div>
        </div>

        <div class="contact-methods reveal">
          <button class="chip tooltip" id="copy-email" data-tooltip="Copy email">
            <span class="icon" aria-hidden="true">ðŸ“§</span>
            hello@whyknot.live
          </button>
          <a class="chip" href="/#early-access">
            <span class="icon" aria-hidden="true">ðŸ§ª</span>
            Join the waitlist
          </a>
        </div>
      </div>
    </section>

    <!-- Contact Form Section -->
    <section class="form-section">
      <div class="section-container">
        <div class="form-wrapper">
          <div class="form-header text-center">
            <h2 class="section-title">Send us a Message</h2>
            <p class="section-description">
              Fill out the form below and we'll get back to you as soon as possible.
            </p>
          </div>

          <!-- Success Message -->
          <div id="form-success" class="form-message success-message is-hidden" role="alert">
            <div class="message-content">
              <svg class="message-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              <div>
                <h3>Message Sent Successfully!</h3>
                <p>Thank you for reaching out. We'll get back to you within 24 hours.</p>
              </div>
            </div>
          </div>

          <!-- Error Message -->
          <div id="form-error" class="form-message error-message is-hidden" role="alert">
            <div class="message-content">
              <svg class="message-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              <div>
                <h3>Error Sending Message</h3>
                <p id="error-text">Something went wrong. Please try again.</p>
              </div>
            </div>
          </div>

          <!-- Contact Form -->
          <form id="contact-form" class="contact-form">
            <div class="form-grid">
              <div class="form-group">
                <label for="name" class="form-label">
                  Your Name <span class="required">*</span>
                </label>
                <input 
                  type="text" 
                  id="name" 
                  name="name" 
                  class="form-input" 
                  placeholder="Enter your full name"
                  required
                  autocomplete="name"
                />
              </div>

              <div class="form-group">
                <label for="email" class="form-label">
                  Email Address <span class="required">*</span>
                </label>
                <input 
                  type="email" 
                  id="email" 
                  name="email" 
                  class="form-input" 
                  placeholder="Enter your email address"
                  required
                  autocomplete="email"
                />
              </div>
            </div>

            <div class="form-group">
              <label for="subject" class="form-label">
                Subject <span class="required">*</span>
              </label>
              <input 
                type="text" 
                id="subject" 
                name="subject" 
                class="form-input" 
                placeholder="What's this about?"
                required
              />
            </div>

            <div class="form-group">
              <label for="message" class="form-label">
                Message <span class="required">*</span>
              </label>
              <textarea 
                id="message" 
                name="message" 
                class="form-textarea" 
                placeholder="Tell us more about your inquiry..."
                required
                rows="6"
              ></textarea>
            </div>

            <div class="form-actions">
              <button type="submit" class="btn btn-primary btn-lg">
                <span class="btn-text">Send Message</span>
                <span class="btn-loader is-hidden">
                  <svg class="spinner" width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" opacity="0.2"/>
                    <path d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" fill="currentColor"/>
                  </svg>
                  Sending...
                </span>
              </button>
            </div>
          </form>
        </div>
      </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq-section">
      <div class="section-container">
        <div class="center-800 text-center">
          <h2 class="section-title">Frequently Asked Questions</h2>
          <p class="text-muted">Quick answers to the most common questions about WhyKnot.</p>
        </div>
        <div class="faq-list">
          <details class="faq-item card reveal">
            <summary>
              <span>How fast do you respond?</span>
              <span class="faq-icon" aria-hidden="true">âŒ„</span>
            </summary>
            <div class="faq-content">
              We aim to respond within 24 hours on weekdays. Complex queries may take a little longer, but youâ€™ll always get an acknowledgement first.
            </div>
          </details>
          <details class="faq-item card reveal">
            <summary>
              <span>Do you offer demos or calls?</span>
              <span class="faq-icon" aria-hidden="true">âŒ„</span>
            </summary>
            <div class="faq-content">
              Yes â€” for collaborations and partnership discussions, weâ€™re happy to set up a short call or demo. Mention this in your message.
            </div>
          </details>
          <details class="faq-item card reveal">
            <summary>
              <span>Where are you based?</span>
              <span class="faq-icon" aria-hidden="true">âŒ„</span>
            </summary>
            <div class="faq-content">
              Weâ€™re a remote-first team with a core presence in India (IST). We accommodate global time zones for key conversations.
            </div>
          </details>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="cta-section">
      <div class="section-container">
        <div class="cta-content text-center">
          <h2 class="cta-title">Still Have Questions?</h2>
          <p class="cta-description">
            Don't hesitate to reach out. We're here to help and always excited 
            to connect with fellow creators and innovators.
          </p>
          <div class="cta-actions">
            <a href="mailto:hello@whyknot.live" class="btn btn-lg">
              Email Us Directly
            </a>
            <a href="/#early-access" class="btn btn-ghost btn-lg">
              Join Our Waitlist
            </a>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
// Contact form handling (typed for TS checks)
const contactForm = document.getElementById('contact-form') as HTMLFormElement | null;
const submitBtn = contactForm?.querySelector('button[type="submit"]') as HTMLButtonElement | null;
const btnText = submitBtn?.querySelector('.btn-text') as HTMLElement | null;
const btnLoader = submitBtn?.querySelector('.btn-loader') as HTMLElement | null;
const formSuccess = document.getElementById('form-success') as HTMLElement | null;
const formError = document.getElementById('form-error') as HTMLElement | null;
const errorText = document.getElementById('error-text') as HTMLElement | null;

if (contactForm) {
  contactForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Get form data
    const formEl = contactForm as HTMLFormElement;
    const formData = new FormData(formEl);
    const name = String(formData.get('name') ?? '');
    const email = String(formData.get('email') ?? '');
    const subject = String(formData.get('subject') ?? '');
    const message = String(formData.get('message') ?? '');
    // const data = { name, email, subject, message };
    
    // Validate
    if (!name || !email || !subject || !message) {
      showError('Please fill in all required fields.');
      return;
    }
    
    if (!isValidEmail(email)) {
      showError('Please enter a valid email address.');
      return;
    }
    
    // Show loading state
    setLoading(true);
    hideMessages();
    
    try {
      // Simulate API call (replace with your actual endpoint)
      await new Promise(resolve => setTimeout(resolve, 2000));
      
            // Here you would submit to your backend API
      // Production: Replace with actual API call
      
      // Show success
      showSuccess();
      formEl.reset();
      
    } catch (error) {
      // Production: Replace with proper error logging
      showError('Failed to send message. Please try again.');
    } finally {
      setLoading(false);
    }
  });
}

function isValidEmail(email: string): boolean {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
}

function setLoading(isLoading: boolean): void {
  if (submitBtn) submitBtn.disabled = isLoading;
  if (contactForm) contactForm.setAttribute('aria-busy', String(isLoading));
  if (submitBtn) submitBtn.setAttribute('aria-disabled', String(isLoading));
  if (isLoading) {
    btnText?.classList.add('is-hidden');
    btnLoader?.classList.remove('is-hidden');
    submitBtn?.classList.add('is-loading');
  } else {
    btnText?.classList.remove('is-hidden');
    btnLoader?.classList.add('is-hidden');
    submitBtn?.classList.remove('is-loading');
  }
}

function showSuccess() {
  hideMessages();
  formSuccess?.classList.remove('is-hidden');
  setTimeout(() => formSuccess?.classList.add('is-hidden'), 5000);
}

function showError(message: string) {
  hideMessages();
  if (errorText) errorText.textContent = message;
  formError?.classList.remove('is-hidden');
  setTimeout(() => formError?.classList.add('is-hidden'), 5000);
}

function hideMessages() {
  formSuccess?.classList.add('is-hidden');
  formError?.classList.add('is-hidden');
}

// FAQ accordion functionality
const faqItems = document.querySelectorAll('.faq-item');
faqItems.forEach((item) => {
  const summary = item.querySelector('summary') as HTMLElement | null;
  const icon = item.querySelector('.faq-icon') as HTMLElement | null;
  if (!summary) return;

  summary.addEventListener('click', (e) => {
    // Prevent default behavior to handle it manually
    e.preventDefault();
    
    // Toggle the open attribute
    const isOpen = item.hasAttribute('open');
    if (isOpen) {
      item.removeAttribute('open');
      if (icon) icon.style.transform = 'rotate(0deg)';
    } else {
      item.setAttribute('open', '');
      if (icon) icon.style.transform = 'rotate(180deg)';
    }
  });
});

// Reveal-on-scroll animations
const revealEls = document.querySelectorAll('.reveal');
if ('IntersectionObserver' in window && revealEls.length) {
  const io = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('reveal-in');
        io.unobserve(entry.target);
      }
    });
  }, { threshold: 0.15 });
  revealEls.forEach((el) => io.observe(el));
} else {
  revealEls.forEach((el) => el.classList.add('reveal-in'));
}

// Simple counters
const counters = document.querySelectorAll('[data-counter]') as NodeListOf<HTMLElement>;
counters.forEach((el) => {
  const targetStr = el.getAttribute('target-value') || '0';
  const target = Number(targetStr);
  if (!Number.isFinite(target) || target <= 0) return;
  let current = 0;
  const duration = 1200; // ms
  const start = performance.now();
  const step = (now: number) => {
    const p = Math.min(1, (now - start) / duration);
    const eased = 1 - Math.pow(1 - p, 3);
    current = Math.round(target * eased);
    el.textContent = String(current);
    if (p < 1) requestAnimationFrame(step);
  };
  requestAnimationFrame(step);
});

// Copy email helper
const copyEmailBtn = document.getElementById('copy-email');
copyEmailBtn?.addEventListener('click', async () => {
  try {
    await navigator.clipboard.writeText('hello@whyknot.live');
    (copyEmailBtn as HTMLElement).setAttribute('data-tooltip', 'Copied!');
    setTimeout(() => (copyEmailBtn as HTMLElement).setAttribute('data-tooltip', 'Copy email'), 1200);
  } catch (e) {
    // Silently handle clipboard errors
  }
});
</script>